<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Addin</name>
    </assembly>
    <members>
        <member name="T:Addin.Connect">
            <summary>The object for implementing an Add-in.</summary>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:Addin.Connect.#ctor">
            <summary>Implements the constructor for the Add-in object. Place your initialization code within this method.</summary>
        </member>
        <member name="M:Addin.Connect.OnConnection(System.Object,Extensibility.ext_ConnectMode,System.Object,System.Array@)">
            <summary>Implements the OnConnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being loaded.</summary>
            <param term='application'>Root object of the host application.</param>
            <param term='connectMode'>Describes how the Add-in is being loaded.</param>
            <param term='addInInst'>Object representing this Add-in.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:Addin.Connect.OnDisconnection(Extensibility.ext_DisconnectMode,System.Array@)">
            <summary>Implements the OnDisconnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being unloaded.</summary>
            <param term='disconnectMode'>Describes how the Add-in is being unloaded.</param>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:Addin.Connect.OnAddInsUpdate(System.Array@)">
            <summary>Implements the OnAddInsUpdate method of the IDTExtensibility2 interface. Receives notification when the collection of Add-ins has changed.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />		
        </member>
        <member name="M:Addin.Connect.OnStartupComplete(System.Array@)">
            <summary>Implements the OnStartupComplete method of the IDTExtensibility2 interface. Receives notification that the host application has completed loading.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:Addin.Connect.OnBeginShutdown(System.Array@)">
            <summary>Implements the OnBeginShutdown method of the IDTExtensibility2 interface. Receives notification that the host application is being unloaded.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:Addin.Connect.QueryStatus(System.String,EnvDTE.vsCommandStatusTextWanted,EnvDTE.vsCommandStatus@,System.Object@)">
            <summary>Implements the QueryStatus method of the IDTCommandTarget interface. This is called when the command's availability is updated</summary>
            <param term='commandName'>The name of the command to determine state for.</param>
            <param term='neededText'>Text that is needed for the command.</param>
            <param term='status'>The state of the command in the user interface.</param>
            <param term='commandText'>Text requested by the neededText parameter.</param>
            <seealso class='Exec' />
        </member>
        <member name="M:Addin.Connect.Exec(System.String,EnvDTE.vsCommandExecOption,System.Object@,System.Object@,System.Boolean@)">
            <summary>Implements the Exec method of the IDTCommandTarget interface. This is called when the command is invoked.</summary>
            <param term='commandName'>The name of the command to execute.</param>
            <param term='executeOption'>Describes how the command should be run.</param>
            <param term='varIn'>Parameters passed from the caller to the command handler.</param>
            <param term='varOut'>Parameters passed from the command handler to the caller.</param>
            <param term='handled'>Informs the caller if the command was handled or not.</param>
            <seealso class='Exec' />
        </member>
        <member name="T:Addin.CodeGeneration.TestSuiteGeneratorBase">
            <summary>
            Base class for this transformation
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.Write(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.WriteLine(System.String)">
            <summary>
            Write text directly into the generated output
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.Write(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.WriteLine(System.String,System.Object[])">
            <summary>
            Write formatted text directly into the generated output
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.Error(System.String)">
            <summary>
            Raise an error
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.Warning(System.String)">
            <summary>
            Raise a warning
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.PushIndent(System.String)">
            <summary>
            Increase the indent
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.PopIndent">
            <summary>
            Remove the last indent that was added with PushIndent
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.ClearIndent">
            <summary>
            Remove any indentation
            </summary>
        </member>
        <member name="P:Addin.CodeGeneration.TestSuiteGeneratorBase.GenerationEnvironment">
            <summary>
            The string builder that generation-time code is using to assemble generated output
            </summary>
        </member>
        <member name="P:Addin.CodeGeneration.TestSuiteGeneratorBase.Errors">
            <summary>
            The error collection for the generation process
            </summary>
        </member>
        <member name="P:Addin.CodeGeneration.TestSuiteGeneratorBase.indentLengths">
            <summary>
            A list of the lengths of each indent that was added with PushIndent
            </summary>
        </member>
        <member name="P:Addin.CodeGeneration.TestSuiteGeneratorBase.CurrentIndent">
            <summary>
            Gets the current indent we use when adding lines to the output
            </summary>
        </member>
        <member name="P:Addin.CodeGeneration.TestSuiteGeneratorBase.Session">
            <summary>
            Current transformation session
            </summary>
        </member>
        <member name="T:Addin.CodeGeneration.TestSuiteGeneratorBase.ToStringInstanceHelper">
            <summary>
            Utility class to produce culture-oriented representation of an object as a string.
            </summary>
        </member>
        <member name="M:Addin.CodeGeneration.TestSuiteGeneratorBase.ToStringInstanceHelper.ToStringWithCulture(System.Object)">
            <summary>
            This is called from the compile/run appdomain to convert objects within an expression block to a string
            </summary>
        </member>
        <member name="P:Addin.CodeGeneration.TestSuiteGeneratorBase.ToStringInstanceHelper.FormatProvider">
            <summary>
            Gets or sets format provider to be used by ToStringWithCulture method.
            </summary>
        </member>
    </members>
</doc>
